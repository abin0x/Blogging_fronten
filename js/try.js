// üïå ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂‡ßá‡¶∞ ‡¶ú‡ßá‡¶≤‡¶æ‡¶∞ ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ
const districts = [
  "‡¶¨‡¶∞‡¶ó‡ßÅ‡¶®‡¶æ", "‡¶¨‡¶∞‡¶ø‡¶∂‡¶æ‡¶≤", "‡¶≠‡ßã‡¶≤‡¶æ", "‡¶ù‡¶æ‡¶≤‡¶ï‡¶æ‡¶†‡ßÄ", "‡¶™‡¶ü‡ßÅ‡¶Ø‡¶º‡¶æ‡¶ñ‡¶æ‡¶≤‡ßÄ", "‡¶™‡¶ø‡¶∞‡ßã‡¶ú‡¶™‡ßÅ‡¶∞", "‡¶¨‡¶æ‡¶®‡ßç‡¶¶‡¶∞‡¶¨‡¶æ‡¶®", "‡¶¨‡ßç‡¶∞‡¶æ‡¶π‡ßç‡¶Æ‡¶®‡¶¨‡¶æ‡¶°‡¶º‡ßÄ‡¶Ø‡¶º‡¶æ", "‡¶ö‡¶æ‡¶Å‡¶¶‡¶™‡ßÅ‡¶∞", 
  "‡¶ö‡¶ü‡ßç‡¶ü‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ", "‡¶ï‡ßÅ‡¶Æ‡¶ø‡¶≤‡ßç‡¶≤‡¶æ", "‡¶ï‡¶ï‡ßç‡¶∏‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞", "‡¶´‡ßá‡¶®‡ßÄ", "‡¶ñ‡¶æ‡¶ó‡¶°‡¶º‡¶æ‡¶õ‡¶°‡¶º‡¶ø", "‡¶≤‡¶ï‡ßç‡¶∑‡ßÄ‡¶™‡ßÅ‡¶∞", "‡¶®‡ßã‡¶Ø‡¶º‡¶æ‡¶ñ‡¶æ‡¶≤‡ßÄ", "‡¶∞‡¶æ‡¶ô‡ßç‡¶ó‡¶æ‡¶Æ‡¶æ‡¶ü‡¶ø", "‡¶¢‡¶æ‡¶ï‡¶æ", "‡¶´‡¶∞‡¶ø‡¶¶‡¶™‡ßÅ‡¶∞", 
  "‡¶ó‡¶æ‡¶ú‡ßÄ‡¶™‡ßÅ‡¶∞", "‡¶ó‡ßã‡¶™‡¶æ‡¶≤‡¶ó‡¶û‡ßç‡¶ú", "‡¶ï‡¶ø‡¶∂‡ßã‡¶∞‡¶ó‡¶û‡ßç‡¶ú", "‡¶Æ‡¶æ‡¶¶‡¶æ‡¶∞‡ßÄ‡¶™‡ßÅ‡¶∞", "‡¶Æ‡¶æ‡¶®‡¶ø‡¶ï‡¶ó‡¶û‡ßç‡¶ú", "‡¶Æ‡ßÅ‡¶®‡ßç‡¶∏‡ßÄ‡¶ó‡¶û‡ßç‡¶ú", "‡¶®‡¶æ‡¶∞‡¶æ‡¶Ø‡¶º‡¶£‡¶ó‡¶û‡ßç‡¶ú", "‡¶®‡¶∞‡¶∏‡¶ø‡¶Ç‡¶¶‡ßÄ", "‡¶∞‡¶æ‡¶ú‡¶¨‡¶æ‡¶°‡¶º‡ßÄ", 
  "‡¶∂‡¶∞‡ßÄ‡¶Ø‡¶º‡¶§‡¶™‡ßÅ‡¶∞", "‡¶ü‡¶æ‡¶ô‡ßç‡¶ó‡¶æ‡¶á‡¶≤", "‡¶ú‡¶æ‡¶Æ‡¶æ‡¶≤‡¶™‡ßÅ‡¶∞", "‡¶Æ‡¶Ø‡¶º‡¶Æ‡¶®‡¶∏‡¶ø‡¶Ç‡¶π", "‡¶®‡ßá‡¶§‡ßç‡¶∞‡¶ï‡ßã‡¶®‡¶æ", "‡¶∂‡ßá‡¶∞‡¶™‡ßÅ‡¶∞", "‡¶¨‡¶æ‡¶ó‡ßá‡¶∞‡¶π‡¶æ‡¶ü", "‡¶ö‡ßÅ‡¶Ø‡¶º‡¶æ‡¶°‡¶æ‡¶ô‡¶æ", "‡¶Ø‡¶∂‡ßã‡¶∞", "‡¶ù‡¶ø‡¶®‡¶æ‡¶á‡¶¶‡¶π", 
  "‡¶ñ‡ßÅ‡¶≤‡¶®‡¶æ", "‡¶ï‡ßÅ‡¶∑‡ßç‡¶ü‡¶ø‡¶Ø‡¶º‡¶æ", "‡¶Æ‡¶æ‡¶ó‡ßÅ‡¶∞‡¶æ", "‡¶Æ‡ßá‡¶π‡ßá‡¶∞‡¶™‡ßÅ‡¶∞", "‡¶®‡¶°‡¶º‡¶æ‡¶á‡¶≤", "‡¶∏‡¶æ‡¶§‡¶ï‡ßç‡¶∑‡ßÄ‡¶∞‡¶æ", "‡¶∞‡¶æ‡¶ú‡¶∂‡¶æ‡¶π‡ßÄ", "‡¶¨‡¶ó‡ßÅ‡¶∞‡¶æ", "‡¶ú‡¶Ø‡¶º‡¶™‡ßÅ‡¶∞‡¶π‡¶æ‡¶ü", "‡¶®‡¶ì‡¶ó‡¶æ‡¶Å", "‡¶®‡¶æ‡¶ü‡ßã‡¶∞", 
  "‡¶ö‡¶æ‡¶Å‡¶™‡¶æ‡¶á ‡¶®‡¶ì‡¶Ø‡¶º‡¶æ‡¶¨‡¶ó‡¶û‡ßç‡¶ú", "‡¶™‡¶æ‡¶¨‡¶®‡¶æ", "‡¶∞‡¶æ‡¶ú‡¶∂‡¶æ‡¶π‡ßÄ", "‡¶∏‡¶ø‡¶∞‡¶æ‡¶ú‡¶ó‡¶û‡ßç‡¶ú", "‡¶∞‡¶Ç‡¶™‡ßÅ‡¶∞", "‡¶ó‡¶æ‡¶á‡¶¨‡¶æ‡¶®‡ßç‡¶ß‡¶æ", "‡¶ï‡ßÅ‡¶°‡¶º‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ", "‡¶®‡ßÄ‡¶≤‡¶´‡¶æ‡¶Æ‡¶æ‡¶∞‡ßÄ", "‡¶≤‡¶æ‡¶≤‡¶Æ‡¶®‡¶ø‡¶∞‡¶π‡¶æ‡¶ü", 
  "‡¶¶‡¶ø‡¶®‡¶æ‡¶ú‡¶™‡ßÅ‡¶∞", "‡¶†‡¶æ‡¶ï‡ßÅ‡¶∞‡¶ó‡¶æ‡¶Å‡¶ì", "‡¶™‡¶û‡ßç‡¶ö‡¶ó‡¶°‡¶º", "‡¶π‡¶¨‡¶ø‡¶ó‡¶û‡ßç‡¶ú", "‡¶Æ‡ßå‡¶≤‡¶≠‡ßÄ‡¶¨‡¶æ‡¶ú‡¶æ‡¶∞", "‡¶∏‡ßÅ‡¶®‡¶æ‡¶Æ‡¶ó‡¶û‡ßç‡¶ú", "‡¶∏‡¶ø‡¶≤‡ßá‡¶ü"
];

// ‚úÖ ‡¶ú‡ßá‡¶≤‡¶æ ‡¶°‡ßç‡¶∞‡¶™‡¶°‡¶æ‡¶â‡¶® ‡¶™‡ßÇ‡¶∞‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®
const districtSelect = document.getElementById("district");
districts.forEach(district => {
  const option = document.createElement("option");
  option.value = district;
  option.textContent = district;
  districtSelect.appendChild(option);
});

// ‚úÖ ‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú‡ßá‡¶∞ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶®‡¶æ‡¶Æ
const prayerNamesBn = {
  "Fajr": "‡¶´‡¶ú‡¶∞",
  "Sunrise": "‡¶∏‡ßÇ‡¶∞‡ßç‡¶Ø‡ßã‡¶¶‡¶Ø‡¶º",
  "Dhuhr": "‡¶Ø‡ßã‡¶π‡¶∞",
  "Asr": "‡¶Ü‡¶∏‡¶∞",
  "Sunset": "‡¶∏‡ßÇ‡¶∞‡ßç‡¶Ø‡¶æ‡¶∏‡ßç‡¶§",
  "Maghrib": "‡¶Æ‡¶æ‡¶ó‡¶∞‡¶ø‡¶¨",
  "Isha": "‡¶á‡¶∂‡¶æ",
  "Imsak": "‡¶∏‡ßá‡¶π‡¶∞‡¶ø ‡¶∂‡ßá‡¶∑",
  "Midnight": "‡¶Æ‡¶ß‡ßç‡¶Ø‡¶∞‡¶æ‡¶§",
  "Firstthird": "‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶§‡ßÉ‡¶§‡ßÄ‡ßü‡¶æ‡¶Ç‡¶∂",
  "Lastthird": "‡¶∂‡ßá‡¶∑ ‡¶§‡ßÉ‡¶§‡ßÄ‡ßü‡¶æ‡¶Ç‡¶∂"
};

// ‚úÖ ‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú‡ßá‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º API ‡¶•‡ßá‡¶ï‡ßá ‡¶Ü‡¶®‡ßÅ‡¶® (async/await ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞)
const fetchPrayerTimes = async (district) => {
  const apiUrl = `http://api.aladhan.com/v1/calendarByCity?city=${encodeURIComponent(district)}&country=Bangladesh&method=2`;

  try {
    // ‡¶≤‡ßã‡¶°‡¶ø‡¶Ç ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®
    showLoadingMessage("‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú‡ßá‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶≤‡ßã‡¶° ‡¶π‡¶ö‡ßç‡¶õ‡ßá...");

    const response = await fetch(apiUrl);
    const data = await response.json();

    if (!data?.data?.[0]?.timings) {
      showErrorMessage("‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú‡ßá‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§");
      return;
    }

    const times = data.data[0].timings;
    adjustPrayerTimes(times); // ‡¶∏‡¶Æ‡ßü ‡¶†‡¶ø‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®
    showPrayerTimes(times);   // UI-‡¶§‡ßá ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®
  } catch (error) {
    showErrorMessage("API ‡¶•‡ßá‡¶ï‡ßá ‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú‡ßá‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶Ü‡¶®‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§");
    console.error("API Fetch Error:", error);
  }
};

// ‚úÖ ‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú‡ßá‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶†‡¶ø‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶® (‡¶´‡¶ú‡¶∞ -14 ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü, ‡¶Ü‡¶∏‡¶∞ +48 ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü, ‡¶á‡¶∂‡¶æ +15 ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü)
const adjustPrayerTimes = (times) => {
  if (times.Fajr) times.Fajr = adjustTime(times.Fajr, -14);
  if (times.Asr) times.Asr = adjustTime(times.Asr, 48);
  if (times.Isha) times.Isha = adjustTime(times.Isha, 15);
};

// ‚úÖ ‡¶∏‡¶Æ‡ßü ‡¶†‡¶ø‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶® (HH:MM ‡¶•‡ßá‡¶ï‡ßá ‡¶∏‡¶Æ‡ßü ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶®)
const adjustTime = (time, offset) => {
  let match = time.match(/\d{2}:\d{2}/);
  if (!match) return time; // ‡¶≠‡ßÅ‡¶≤ ‡¶π‡¶≤‡ßá ‡¶Ü‡¶∏‡¶≤ ‡¶∏‡¶Æ‡ßü ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®

  let [hours, minutes] = match[0].split(":").map(Number);
  minutes += offset;

  while (minutes < 0) {
    minutes += 60;
    hours = hours === 0 ? 23 : hours - 1;
  }
  while (minutes >= 60) {
    minutes -= 60;
    hours = (hours + 1) % 24;
  }

  return `${hours.toString().padStart(2, "0")}:${minutes.toString().padStart(2, "0")}`;
};

// ‚úÖ UI-‡¶§‡ßá ‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú‡ßá‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶¶‡ßá‡¶ñ‡¶æ‡¶® (‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶®‡¶æ‡¶Æ + (+06) ‡¶¨‡¶æ‡¶¶)
const showPrayerTimes = (times) => {
  const prayerTimesDiv = document.getElementById("prayer-times");
  prayerTimesDiv.innerHTML = ""; // ‡¶Ü‡¶ó‡ßá‡¶∞ ‡¶°‡¶æ‡¶ü‡¶æ ‡¶Æ‡ßÅ‡¶õ‡ßÅ‡¶®

  const ul = document.createElement("ul");
  ul.classList.add("prayer-list");

  for (const prayer in times) {
    if (prayerNamesBn[prayer]) {
      const li = document.createElement("li");
      const timeWithoutZone = times[prayer].split(" ")[0]; // (+06) ‡¶Ö‡¶Ç‡¶∂ ‡¶Æ‡ßÅ‡¶õ‡ßá ‡¶´‡ßá‡¶≤‡¶æ
      li.innerHTML = `<span class="prayer-name">${prayerNamesBn[prayer]}</span> <span class="prayer-time">${timeWithoutZone}</span>`;
      ul.appendChild(li);
    }
  }

  prayerTimesDiv.appendChild(ul);
  prayerTimesDiv.classList.add("fade-in"); // ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶®‡¶ø‡¶Æ‡ßá‡¶∂‡¶® ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
};

// ‚úÖ ‡¶≤‡ßã‡¶°‡¶ø‡¶Ç ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®
const showLoadingMessage = (message) => {
  const prayerTimesDiv = document.getElementById("prayer-times");
  prayerTimesDiv.innerHTML = `<p class="loading">${message}</p>`;
};

// ‚úÖ ‡¶è‡¶∞‡¶∞ ‡¶¨‡¶æ‡¶∞‡ßç‡¶§‡¶æ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®
const showErrorMessage = (message) => {
  const prayerTimesDiv = document.getElementById("prayer-times");
  prayerTimesDiv.innerHTML = `<p class="error">${message}</p>`;
};

// ‚úÖ ‡¶è‡¶∞‡¶ø‡ßü‡¶æ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡¶≤‡ßá ‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú‡ßá‡¶∞ ‡¶∏‡¶Æ‡¶Ø‡¶º ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®
districtSelect.addEventListener("change", () => {
  const district = districtSelect.value;
  if (district) {
    fetchPrayerTimes(district);
  }
});
